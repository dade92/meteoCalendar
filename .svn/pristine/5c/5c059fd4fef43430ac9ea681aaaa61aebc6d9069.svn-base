package entity;

import java.io.Serializable;
import java.util.Collection;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.persistence.JoinColumn;

@Entity
@NamedQueries({
        @NamedQuery(name = User.findAll, query = "SELECT u FROM User u"),
        @NamedQuery(name = User.count, query = "SELECT COUNT(u) FROM User u")
})

public class User implements Serializable {
	
    public static final String findAll = "Contact.findAll";
    public static final String count = "Contact.count";
    
	private static final long serialVersionUID = 1L;
	@Id
    @GeneratedValue(strategy = GenerationType.AUTO)
	private int id;
    @NotNull(message = "First Name cannot be empty")
	private String firstname;
    @NotNull(message = "Last Name cannot be empty")
	private String lastname;
    @NotNull(message = "username cannot be empty")
    @Column(unique=true)
	private String name;
    @NotNull(message = "password cannot be empty")
	private String password;
    @Pattern(regexp="[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?",
            message="Invalid email")
	private String email;
    private boolean visible;
    private Collection<Event> createdEvents;
    private Collection<Event> invitedEvents;
    
    //costruttore vuoto richiesto
    public User() {
    	
    }
    
    /**
     * costruttore per inizializzare lo User
     * @param username username
     * @param firstName firstname
     * @param lastName lastname
     * @param email email
     */
    public User(String username,String firstName,String lastName,String email) {
    	this.firstname=firstName;
    	this.lastname=lastName;
    	this.email=email;
    	this.name=username;
    }
	
    //getter/setter
    
    public String getFirstname() {
    	return firstname;
    }
    
    public void setFirstname(String firstName) {
    	this.firstname=firstName;
    }
    
    public String getLastname() {
    	return lastname;
    }
    
    public void setLastname(String lastName) {
    	this.lastname=lastName;
    }
    
    public String getEmail() {
    	return email;
    }
    
    public void setEmail(String email) {
    	this.email=email;
    }
    
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

	public boolean isVisible() {
		return visible;
	}

	public void setVisible(boolean visible) {
		this.visible = visible;
	}
	
	@OneToMany
	@JoinTable(name="Event")
	public Collection<Event> getCreatedEvents() {
		return createdEvents;
	}
	
	
	public Collection<Event> getInvitedEvents() {
		return invitedEvents;
	}
	
	public String getName() {
		return name;
	}
	
	public void setname(String username) {
		this.name=username;
	}
	
	public void setPassword(String password) {
		this.password=password;
	}
	
	public String getPassword() {
		return password;
	}


}
