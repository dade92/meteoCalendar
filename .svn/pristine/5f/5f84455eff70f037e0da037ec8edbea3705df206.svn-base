package control;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

import javax.ejb.EJB;
import javax.ejb.Singleton;
import javax.ejb.Startup;

import entity.Event;
import entity.NotificationType;
import entity.User;

@Singleton
public class Rescheduler {
	
	@EJB NotificationManager nm;
	@EJB UserManager um;
	@EJB EventManager em;
	@EJB WeatherManager wm;
	@EJB InvitationManager im;	
	
	private static final long MILLIS_IN_A_DAY=3600*24*1000;
	
	public ArrayList<String> checkForBadWeather(User currentUser) {
		
		ArrayList<String> eventTitles=new ArrayList<String>();
		Calendar calendar=new GregorianCalendar();
		//obtains the time in millis that corresponds to tomorrow
		calendar.add(Calendar.DAY_OF_MONTH, 1);
		Date d=calendar.getTime();
		//obtains the time in millis that corresponds to three days after
		calendar.add(Calendar.DAY_OF_MONTH, 2);
		Date d2=calendar.getTime();
		
		Date eventDate;
		
		for(Event e:em.loadOutdoorEventsByUser(currentUser)) {
			
			eventDate=e.getStartDate();
			
			//if tomorrow there is an event with bad weather conditions
			if(e.getBadWeatherCondition().equals("Cloud") && 
					d.getYear()==eventDate.getYear() && d.getMonth()==eventDate.getMonth() && d.getDay()==eventDate.getDay())
				eventTitles.add(e.getTitle());
			//checks also for bad weather condition of three days after
			else if(e.getBadWeatherCondition().equals("Cloud") 
					&& d2.getYear()==eventDate.getYear() && d2.getMonth()==eventDate.getMonth() && d2.getDay()==eventDate.getDay()) {
				calendar.add(Calendar.DAY_OF_MONTH, 1);
				//create a notification with the suggested date
				nm.createNotification(currentUser, e, NotificationType.BAD_WEATHER_CONDITION,calendar.getTime().toString());
			}
		}
		
		for(Event e:im.loadInvitedOutdoorEventsByUser(currentUser)) {
			eventDate=e.getStartDate();
			//if tomorrow there is an event with bad weather conditions
			if(e.getBadWeatherCondition().equals("Cloud") 
					&& d.getYear()==eventDate.getYear() && d.getMonth()==eventDate.getMonth() && d.getDay()==eventDate.getDay())
				eventTitles.add(e.getTitle());
		}
		
		return eventTitles;				
	}
	
}
